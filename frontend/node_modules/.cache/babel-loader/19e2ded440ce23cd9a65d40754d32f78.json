{"ast":null,"code":"var _jsxFileName = \"/Users/codyum/Desktop/Github/h4tp/src/components/language.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'semantic-ui-react';\nimport AutoComplete from 'react-autocomplete';\n\nfunction Record() {\n  const [isRecording, setIsRecording] = useState(false);\n  const languageOptions = [{\n    key: 'Chinese',\n    text: 'Chinese',\n    value: 'Chinese'\n  }, {\n    key: 'Dutch',\n    text: 'Dutch',\n    value: 'Dutch'\n  }, {\n    key: 'English',\n    text: 'English',\n    value: 'English'\n  }];\n\n  function onClick(event) {\n    setIsRecording(!isRecording);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"languageCon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Choose Your Language\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttonA\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Generate Link\"), /*#__PURE__*/React.createElement(Autocomplete, {\n    getItemValue: item => item.label,\n    items: [{\n      label: 'English'\n    }, {\n      label: 'Korean'\n    }, {\n      label: 'pear'\n    }],\n    renderItem: (item, isHighlighted) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: isHighlighted ? 'lightgray' : 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, item.label),\n    value: value,\n    onChange: e => value = e.target.value,\n    onSelect: val => value = val,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Record;","map":{"version":3,"sources":["/Users/codyum/Desktop/Github/h4tp/src/components/language.js"],"names":["React","useState","Link","Dropdown","AutoComplete","Record","isRecording","setIsRecording","languageOptions","key","text","value","onClick","event","item","label","isHighlighted","background","e","target","val"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AAEA,SAASC,MAAT,GAAkB;AACd,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMO,eAAe,GAAG,CACpB;AAAEC,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,IAAI,EAAE,SAAxB;AAAmCC,IAAAA,KAAK,EAAE;AAA1C,GADoB,EAEpB;AAAEF,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,IAAI,EAAE,OAAtB;AAA+BC,IAAAA,KAAK,EAAE;AAAtC,GAFoB,EAGpB;AAAEF,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,IAAI,EAAE,SAAxB;AAAmCC,IAAAA,KAAK,EAAE;AAA1C,GAHoB,CAAxB;;AAOA,WAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpBN,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,eAGI,oBAAC,YAAD;AACI,IAAA,YAAY,EAAGQ,IAAD,IAAUA,IAAI,CAACC,KADjC;AAEI,IAAA,KAAK,EAAE,CACH;AAAEA,MAAAA,KAAK,EAAE;AAAT,KADG,EAEH;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAFG,EAGH;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAHG,CAFX;AAOI,IAAA,UAAU,EAAE,CAACD,IAAD,EAAOE,aAAP,kBACR;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAED,aAAa,GAAG,WAAH,GAAiB;AAA5C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IAAI,CAACC,KADV,CARR;AAYI,IAAA,KAAK,EAAEJ,KAZX;AAaI,IAAA,QAAQ,EAAGO,CAAD,IAAOP,KAAK,GAAGO,CAAC,CAACC,MAAF,CAASR,KAbtC;AAcI,IAAA,QAAQ,EAAGS,GAAD,IAAST,KAAK,GAAGS,GAd/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAsBH;;AAED,eAAef,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'semantic-ui-react';\nimport AutoComplete from 'react-autocomplete';\n\nfunction Record() {\n    const [isRecording, setIsRecording] = useState(false);\n\n    const languageOptions = [\n        { key: 'Chinese', text: 'Chinese', value: 'Chinese' },\n        { key: 'Dutch', text: 'Dutch', value: 'Dutch' },\n        { key: 'English', text: 'English', value: 'English' },\n    ]\n\n\n    function onClick(event) {\n        setIsRecording(!isRecording);\n    }\n    return (\n        <div className=\"languageCon\">\n            <h4>Choose Your Language</h4>\n            <div className=\"buttonA\">Generate Link</div>\n            <Autocomplete\n                getItemValue={(item) => item.label}\n                items={[\n                    { label: 'English' },\n                    { label: 'Korean' },\n                    { label: 'pear' }\n                ]}\n                renderItem={(item, isHighlighted) =>\n                    <div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\n                        {item.label}\n                    </div>\n                }\n                value={value}\n                onChange={(e) => value = e.target.value}\n                onSelect={(val) => value = val}\n            />\n        </div>\n    );\n}\n\nexport default Record;\n"]},"metadata":{},"sourceType":"module"}