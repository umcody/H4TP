{"ast":null,"code":"import _slicedToArray from\"/Users/codyum/Desktop/Github/h4tp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Link}from'react-router-dom';import{Dropdown}from'semantic-ui-react';import Autocomplete from'react-autocomplete';function Record(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isRecording=_useState2[0],setIsRecording=_useState2[1];var languageOptions=[{key:'Chinese',text:'Chinese',value:'Chinese'},{key:'Dutch',text:'Dutch',value:'Dutch'},{key:'English',text:'English',value:'English'}];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),value=_useState4[0],setValue=_useState4[1];function onClick(event){setIsRecording(!isRecording);}return/*#__PURE__*/React.createElement(\"div\",{className:\"languageCon\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Choose Your Language\"),/*#__PURE__*/React.createElement(\"div\",{style:{position:\"relative\"}},/*#__PURE__*/React.createElement(Autocomplete,{getItemValue:function getItemValue(item){return item.label;},items:[{label:'English'},{label:'Korean'},{label:'pear'}],renderItem:function renderItem(item,isHighlighted){return/*#__PURE__*/React.createElement(\"div\",{style:{background:isHighlighted?'lightgray':'white'}},item.label);},value:value,onChange:function onChange(e){return setValue(e.target.value);},onSelect:function onSelect(val){return setValue(val);}})),/*#__PURE__*/React.createElement(Link,{to:\"/url\",className:\"buttonA\"},\"Generate Link\"));}export default Record;","map":{"version":3,"sources":["/Users/codyum/Desktop/Github/h4tp/src/components/language.js"],"names":["React","useState","Link","Dropdown","Autocomplete","Record","isRecording","setIsRecording","languageOptions","key","text","value","setValue","onClick","event","position","item","label","isHighlighted","background","e","target","val"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,QAAT,KAAyB,mBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,CAEA,QAASC,CAAAA,MAAT,EAAkB,eACwBJ,QAAQ,CAAC,KAAD,CADhC,wCACPK,WADO,eACMC,cADN,eAGd,GAAMC,CAAAA,eAAe,CAAG,CACpB,CAAEC,GAAG,CAAE,SAAP,CAAkBC,IAAI,CAAE,SAAxB,CAAmCC,KAAK,CAAE,SAA1C,CADoB,CAEpB,CAAEF,GAAG,CAAE,OAAP,CAAgBC,IAAI,CAAE,OAAtB,CAA+BC,KAAK,CAAE,OAAtC,CAFoB,CAGpB,CAAEF,GAAG,CAAE,SAAP,CAAkBC,IAAI,CAAE,SAAxB,CAAmCC,KAAK,CAAE,SAA1C,CAHoB,CAAxB,CAHc,eAQWV,QAAQ,EARnB,yCAQPU,KARO,eAQDC,QARC,eAWd,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACpBP,cAAc,CAAC,CAACD,WAAF,CAAd,CACH,CACD,mBACI,2BAAK,SAAS,CAAC,aAAf,eACI,qDADJ,cAEI,2BAAK,KAAK,CAAE,CAACS,QAAQ,CAAC,UAAV,CAAZ,eACA,oBAAC,YAAD,EACI,YAAY,CAAE,sBAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,KAAf,EADlB,CAEI,KAAK,CAAE,CACH,CAAEA,KAAK,CAAE,SAAT,CADG,CAEH,CAAEA,KAAK,CAAE,QAAT,CAFG,CAGH,CAAEA,KAAK,CAAE,MAAT,CAHG,CAFX,CAOI,UAAU,CAAE,oBAACD,IAAD,CAAOE,aAAP,qBACR,2BAAK,KAAK,CAAE,CAAEC,UAAU,CAAED,aAAa,CAAG,WAAH,CAAiB,OAA5C,CAAZ,EACKF,IAAI,CAACC,KADV,CADQ,EAPhB,CAYI,KAAK,CAAEN,KAZX,CAaI,QAAQ,CAAE,kBAACS,CAAD,QAAOR,CAAAA,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASV,KAAV,CAAf,EAbd,CAcI,QAAQ,CAAE,kBAACW,GAAD,QAASV,CAAAA,QAAQ,CAACU,GAAD,CAAjB,EAdd,EADA,CAFJ,cAoBgB,oBAAC,IAAD,EAAM,EAAE,CAAE,MAAV,CAAiB,SAAS,CAAC,SAA3B,kBApBhB,CADJ,CAyBH,CAED,cAAejB,CAAAA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'semantic-ui-react';\nimport Autocomplete from 'react-autocomplete';\n\nfunction Record() {\n    const [isRecording, setIsRecording] = useState(false);\n\n    const languageOptions = [\n        { key: 'Chinese', text: 'Chinese', value: 'Chinese' },\n        { key: 'Dutch', text: 'Dutch', value: 'Dutch' },\n        { key: 'English', text: 'English', value: 'English' },\n    ]\n    const [value,setValue] = useState();\n\n\n    function onClick(event) {\n        setIsRecording(!isRecording);\n    }\n    return (\n        <div className=\"languageCon\">\n            <h4>Choose Your Language</h4>\n            <div style={{position:\"relative\"}}>\n            <Autocomplete\n                getItemValue={(item) => item.label}\n                items={[\n                    { label: 'English' },\n                    { label: 'Korean' },\n                    { label: 'pear' }\n                ]}\n                renderItem={(item, isHighlighted) =>\n                    <div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\n                        {item.label}\n                    </div>\n                }\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                onSelect={(val) => setValue(val)}\n            />\n            </div>\n                        <Link to= \"/url\" className=\"buttonA\">Generate Link</Link>\n\n        </div>\n    );\n}\n\nexport default Record;\n"]},"metadata":{},"sourceType":"module"}