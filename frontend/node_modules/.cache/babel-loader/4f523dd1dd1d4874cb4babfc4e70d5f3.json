{"ast":null,"code":"var _jsxFileName = \"/Users/codyum/Desktop/Github/h4tp/src/components/language.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'semantic-ui-react';\nimport Autocomplete from 'react-autocomplete';\n\nfunction Language() {\n  const languageOptions = [{\n    key: 'Chinese',\n    text: 'Chinese',\n    value: 'Chinese'\n  }, {\n    key: 'Dutch',\n    text: 'Dutch',\n    value: 'Dutch'\n  }, {\n    key: 'English',\n    text: 'English',\n    value: 'English'\n  }];\n  const [value, setValue] = useState();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"languageCon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Choose Your Language\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    getItemValue: item => item.label,\n    items: [{\n      label: 'English'\n    }, {\n      label: 'Spanish'\n    }, {\n      label: 'Chinese'\n    }, {\n      label: 'Dutch'\n    }, {\n      label: 'Korea'\n    }, {\n      label: 'French'\n    }, {\n      label: 'Polish'\n    }],\n    renderItem: (item, isHighlighted) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: isHighlighted ? 'lightgray' : 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, item.label),\n    value: value,\n    onChange: e => setValue(e.target.value),\n    onSelect: val => setValue(val),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/url\",\n    className: \"buttonA\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"Generate Link\"));\n}\n\nexport default Language;","map":{"version":3,"sources":["/Users/codyum/Desktop/Github/h4tp/src/components/language.js"],"names":["React","useState","Link","Dropdown","Autocomplete","Language","languageOptions","key","text","value","setValue","position","item","label","isHighlighted","background","e","target","val"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AAEA,SAASC,QAAT,GAAoB;AAGhB,QAAMC,eAAe,GAAG,CACpB;AAAEC,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,IAAI,EAAE,SAAxB;AAAmCC,IAAAA,KAAK,EAAE;AAA1C,GADoB,EAEpB;AAAEF,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,IAAI,EAAE,OAAtB;AAA+BC,IAAAA,KAAK,EAAE;AAAtC,GAFoB,EAGpB;AAAEF,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,IAAI,EAAE,SAAxB;AAAmCC,IAAAA,KAAK,EAAE;AAA1C,GAHoB,CAAxB;AAKA,QAAM,CAACA,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,EAAjC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAK,IAAA,KAAK,EAAE;AAACU,MAAAA,QAAQ,EAAC;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,YAAD;AACI,IAAA,YAAY,EAAGC,IAAD,IAAUA,IAAI,CAACC,KADjC;AAEI,IAAA,KAAK,EAAE,CACH;AAAEA,MAAAA,KAAK,EAAE;AAAT,KADG,EAEH;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAFG,EAGH;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAHG,EAIH;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAJG,EAKH;AAAEA,MAAAA,KAAK,EAAE;AAAT,KALG,EAMH;AAAEA,MAAAA,KAAK,EAAE;AAAT,KANG,EAOH;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAPG,CAFX;AAWI,IAAA,UAAU,EAAE,CAACD,IAAD,EAAOE,aAAP,kBACR;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAED,aAAa,GAAG,WAAH,GAAiB;AAA5C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IAAI,CAACC,KADV,CAZR;AAgBI,IAAA,KAAK,EAAEJ,KAhBX;AAiBI,IAAA,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASR,KAAV,CAjB7B;AAkBI,IAAA,QAAQ,EAAGS,GAAD,IAASR,QAAQ,CAACQ,GAAD,CAlB/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFJ,eAwBgB,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,MAAV;AAAiB,IAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAxBhB,CADJ;AA6BH;;AAED,eAAeb,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'semantic-ui-react';\nimport Autocomplete from 'react-autocomplete';\n\nfunction Language() {\n\n\n    const languageOptions = [\n        { key: 'Chinese', text: 'Chinese', value: 'Chinese' },\n        { key: 'Dutch', text: 'Dutch', value: 'Dutch' },\n        { key: 'English', text: 'English', value: 'English' },\n    ]\n    const [value,setValue] = useState();\n\n    return (\n        <div className=\"languageCon\">\n            <h4>Choose Your Language</h4>\n            <div style={{position:\"relative\"}}>\n            <Autocomplete\n                getItemValue={(item) => item.label}\n                items={[\n                    { label: 'English' },\n                    { label: 'Spanish' },\n                    { label: 'Chinese' },\n                    { label: 'Dutch' },\n                    { label: 'Korea' },\n                    { label: 'French' },\n                    { label: 'Polish' }\n                ]}\n                renderItem={(item, isHighlighted) =>\n                    <div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\n                        {item.label}\n                    </div>\n                }\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                onSelect={(val) => setValue(val)}\n            />\n            </div>\n                        <Link to= \"/url\" className=\"buttonA\">Generate Link</Link>\n\n        </div>\n    );\n}\n\nexport default Language;\n"]},"metadata":{},"sourceType":"module"}