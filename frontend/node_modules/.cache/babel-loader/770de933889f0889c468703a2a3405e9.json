{"ast":null,"code":"var _jsxFileName = \"/Users/codyum/Desktop/Github/h4tp/src/components/firebase.js\";\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebase/config';\n\nfunction Test() {\n  const [text, setText] = useState([]);\n  useEffect(() => {\n    try {\n      db.ref().on('value', snapshot => {\n        let data = [];\n        snapshot.forEach(snap => {\n          data.push(snap.val().content + ' ');\n        });\n        console.log(data);\n        setText(data); // Reads from realtime DB and stores into state\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n  useEffect(() => {\n    const writeData = async () => {\n      try {\n        await db.ref().push({\n          content: 'lorem2' // lorem2 should be replaced with text from Google Speech2Text API\n\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    writeData();\n  }, []); // will need to re-render everytime we get new text from Google Speech2Text API\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, text); // print out all lines of text\n}\n\nexport default Test;","map":{"version":3,"sources":["/Users/codyum/Desktop/Github/h4tp/src/components/firebase.js"],"names":["React","useEffect","useState","db","Test","text","setText","ref","on","snapshot","data","forEach","snap","push","val","content","console","log","e","writeData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,oBAAnB;;AACA,SAASC,IAAT,GAAgB;AACf,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI;AACHE,MAAAA,EAAE,CAACI,GAAH,GAASC,EAAT,CAAY,OAAZ,EAAsBC,QAAD,IAAc;AAClC,YAAIC,IAAI,GAAG,EAAX;AACAD,QAAAA,QAAQ,CAACE,OAAT,CAAkBC,IAAD,IAAU;AAC1BF,UAAAA,IAAI,CAACG,IAAL,CAAUD,IAAI,CAACE,GAAL,GAAWC,OAAX,GAAqB,GAA/B;AACY,SAFb;AAGYC,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACZJ,QAAAA,OAAO,CAACI,IAAD,CAAP,CANkC,CAMnB;AACf,OAPD;AAQA,KATD,CASE,OAAOQ,CAAP,EAAU;AACXF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACA;AACD,GAbQ,EAaN,EAbM,CAAT;AAeAjB,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMkB,SAAS,GAAG,YAAY;AAC7B,UAAI;AACH,cAAMhB,EAAE,CAACI,GAAH,GAASM,IAAT,CAAc;AACnBE,UAAAA,OAAO,EAAE,QADU,CACD;;AADC,SAAd,CAAN;AAGA,OAJD,CAIE,OAAOG,CAAP,EAAU;AACXF,QAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACA;AACD,KARD;;AAUAC,IAAAA,SAAS;AACT,GAZQ,EAYN,EAZM,CAAT,CAjBe,CA6BP;;AAER,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBd,IAAtB,CAAP,CA/Be,CA+B2B;AAC1C;;AACD,eAAeD,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from '../firebase/config';\nfunction Test() {\n\tconst [ text, setText ] = useState([]);\n\tuseEffect(() => {\n\t\ttry {\n\t\t\tdb.ref().on('value', (snapshot) => {\n\t\t\t\tlet data = [];\n\t\t\t\tsnapshot.forEach((snap) => {\n\t\t\t\t\tdata.push(snap.val().content + ' ');\n                });\n                console.log(data);\n\t\t\t\tsetText(data); // Reads from realtime DB and stores into state\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst writeData = async () => {\n\t\t\ttry {\n\t\t\t\tawait db.ref().push({\n\t\t\t\t\tcontent: 'lorem2' // lorem2 should be replaced with text from Google Speech2Text API\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t};\n\n\t\twriteData();\n\t}, []); // will need to re-render everytime we get new text from Google Speech2Text API\n\n\treturn <div className=\"App\">{text}</div>; // print out all lines of text\n}\nexport default Test;"]},"metadata":{},"sourceType":"module"}